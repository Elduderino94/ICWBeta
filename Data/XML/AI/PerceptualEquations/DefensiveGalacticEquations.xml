<?xml version="1.0" ?>

<Equations>

	<!-- High priority whenever a friendly planet has an enemy force in orbit
			... consider how valuable this planet is 
			... and if we don't own much space, this is even more important
			and don't use this coventional goal/plan on systems disconnected by one planet

			-->
	<Needs_Blockade_Lifted>
		(Variable_Target.EnemyForce.HasSpaceForce)
		*
		Function_First_Attack_Allowed.Evaluate
		*
		(Variable_Target.EnemyForce.SpaceTotalUnnormalized > 0)
		*
		(30 +
		(10.0 * Function_GenericPlanetValue.Evaluate) +
		(10.0 * Function_More_Planets_Needed.Evaluate))
		*
		((Function_Need_To_Reconnect_Islands.Evaluate == 0.0) +
		Variable_Target.ConnectsLargestIslands)
		*
		(Variable_Target.TimeSinceSpaceConflict > Function_Blockade_Wait_Time.Evaluate)
	</Needs_Blockade_Lifted>

	<Blockade_Wait_Time>
		Variable_Self.IsDifficulty{Parameter_Difficulty_Level_Type = DifficultyLevelType[Easy]}
		* 90.0
		+
		Variable_Self.IsDifficulty{Parameter_Difficulty_Level_Type = DifficultyLevelType[Normal]}
		* 90.0
		+
		Variable_Self.IsDifficulty{Parameter_Difficulty_Level_Type = DifficultyLevelType[Hard]}
		* 20.0			
	</Blockade_Wait_Time>

	<Has_Friendly_Ground_Force>
		Variable_Target.FriendlyForce.HasGroundForce
	</Has_Friendly_Ground_Force>
	
	<!-- Is there space? -->
	<!-- Are the groundbase and defensive force worth protecting? -->
	<!-- Is the planet worth protecting -->
	<Needs_Ground_Defensive_Structure>
		5.0 *
		Variable_Target.OpenStructureSlots *
		Variable_Target.GroundbaseLevelUnnormalized *
		Variable_Target.FriendlyForce.GroundTotalNBTD *
		Function_DefensiveValue.Evaluate
	</Needs_Ground_Defensive_Structure>
	
	<!-- Is there space? -->
	<!-- Are the starbase and defensive force worth protecting? -->
	<!-- Is the planet worth protecting -->
	<Needs_Space_Defensive_Structure>
		50.0 *
		Variable_Target.OpenStructureSlots *
		Variable_Target.StarbaseLevelUnnormalized *
		Variable_Target.FriendlyForce.SpaceTotalNBTD *
		(1.0 + Function_DefensiveValue.Evaluate)
		+
		8.0 * Function_Planet_Has_Capital_Building.Evaluate
	</Needs_Space_Defensive_Structure>
	
	<Needs_Space_Super_Station>
		(50.0 *
		Variable_Target.OpenStructureSlots *
		Variable_Target.StarbaseLevelUnnormalized *
		Variable_Target.FriendlyForce.SpaceTotalNBTD *
		(1.0 + Function_DefensiveValue.Evaluate)
		+
		8.0 * Function_Planet_Has_Capital_Building.Evaluate)
		*
		(5 > Variable_Self.StructureCount {Parameter_Type = "Oto", Parameter_Type = "Validusia", Parameter_Type = "Empress_Station", Parameter_Only_Consider_Complete = 1.0})
		*
		Variable_Self.IsFaction {Parameter_Faction = "Rebel", Parameter_Faction = "Underworld", Parameter_Faction = "Pentastar", Parameter_Faction = "Hutts"}
	</Needs_Space_Super_Station>
	
	<!-- Don't defend planets with enemy forces blockading (handled by Lift_Blockade) -->
	<!-- How valuable is the planet? -->
	<!-- How many trade routes do I also control the other end for? -->
	<!-- How strong is the enemy around here? -->
	<!-- Is this planet already well-defended -->
	<DefensiveValue>
		(1.0 - Variable_Target.EnemyForce.SpaceTotalNBTT) *
		(Function_GenericPlanetValue.Evaluate + 
		Variable_Target.ActiveTradeRoutes + 
		Variable_Target.EnemyForce.NearbyGroundTotal + Variable_Target.EnemyForce.NearbySpaceTotal -
		Variable_Target.FriendlyForce.GroundTotal - Variable_Target.FriendlyForce.SpaceTotal)
		+
		Variable_Target.Hints.Chokepoint
		+ 
		Variable_Target.Hints.PriorityTarget			
	</DefensiveValue>

    <GroundDefensiveValue>
		(Variable_Target.EnemyForce.HasSpaceForce == 0.0)
		*
		(1.1 - Variable_Target.FriendlyForce.GroundTotalNBTD)
		*
		(
			5.0 * Variable_Target.Hints.Chokepoint
			+
			5.0 * Function_Is_Connected_To_Enemy.Evaluate
			+
			5.0 * (Variable_Target.FriendlyForce.HasGroundUnitsBitfield {Parameter_Type = "MON_MOTHMA", Parameter_Type = "Emperor_Palpatine"} > 0)
			+ 
			Function_Defense_Level.Evaluate
		)
    </GroundDefensiveValue>

    <SpaceDefensiveValue>
		(1.1 - Variable_Target.FriendlyForce.SpaceTotalNBTD)
		*
		(
			5.0 * Variable_Target.Hints.Chokepoint
			+
			5.0 * Function_Is_Connected_To_Enemy.Evaluate
			+ 
			Function_Defense_Level.Evaluate
		)
    </SpaceDefensiveValue>

	<Needs_Weapon>
		Variable_Target.StarbaseLevelUnnormalized
		+
		Variable_Target.GroundbaseLevelUnnormalized
		+
		2.0 * Function_DefensiveValue.Evaluate
		+
		4.0 * Function_Is_Connected_To_Enemy.Evaluate
		+
		8.0 * Function_Planet_Has_Capital_Building.Evaluate
		+
		Variable_Target.FriendlyForce.SpaceTotalUnnormalized / 10000.0 
		+ 
		Variable_Target.FriendlyForce.GroundTotalUnnormalized / 2500.0
	</Needs_Weapon>



	<!-- Regular in base shield.
		The desire to have a ground shield depends upon:
		investment in ground base
		bonus for defensive value (including chokepoint markup)
		bonus for having force here
		-->
	<Needs_Base_Shield>
		2.0 * Variable_Target.GroundbaseLevelUnnormalized
		+
		8.0 * Variable_Target.Hints.Chokepoint
		+
		2.0 * Function_DefensiveValue.Evaluate
		+
		8.0 * Function_Is_Connected_To_Enemy.Evaluate
		+
		Variable_Target.FriendlyForce.GroundTotalUnnormalized / 2500.0
		+
		8.0 * Function_Planet_Has_Capital_Building.Evaluate
	</Needs_Base_Shield>

	<!--
	Just like the need for a shield, but add a flat modifier rather than a force dependent one
	since turbolaser effectiveness isn't very dependent on other units being present.
	-->
	<Needs_Turbolasers>
		2.0 * Variable_Target.GroundbaseLevelUnnormalized
		+
		2.0 * Function_DefensiveValue.Evaluate
		+
		8.0 * Function_Is_Connected_To_Enemy.Evaluate
		+
		8.0 * Function_Planet_Has_Capital_Building.Evaluate
		+
		5.0
	</Needs_Turbolasers>

	<Defense_Level>
		Variable_Target.StarbaseLevelUnnormalized 
		+ Variable_Target.HasStructure {Parameter_Type = "Rebel_Golan_One"}
		+ Variable_Target.HasStructure {Parameter_Type = "Rebel_Golan_Two"}
		+ Variable_Target.HasStructure {Parameter_Type = "Rebel_Golan_Two_Strategic"}
		+ Variable_Target.HasStructure {Parameter_Type = "Rebel_Golan_Three"}
		+ Variable_Target.HasStructure {Parameter_Type = "Rebel_Golan_Three_Strategic"}
		+ Variable_Target.HasStructure {Parameter_Type = "Empire_Golan_One"}
		+ Variable_Target.HasStructure {Parameter_Type = "Empire_Golan_Two"}
		+ Variable_Target.HasStructure {Parameter_Type = "Empire_Golan_Two_Strategic"}
		+ Variable_Target.HasStructure {Parameter_Type = "Empire_Golan_Three"}
		+ Variable_Target.HasStructure {Parameter_Type = "Empire_Golan_Three_Strategic"}
		+ Variable_Target.HasStructure {Parameter_Type = "Oto"}
		+ Variable_Target.HasStructure {Parameter_Type = "Visvia"}
		+ Variable_Target.HasStructure {Parameter_Type = "Brask"}
		+ Variable_Target.HasStructure {Parameter_Type = "NewRep_XQ"}
		+ Variable_Target.HasStructure {Parameter_Type = "Alignment_XQ"}
		+ Variable_Target.HasStructure {Parameter_Type = "Validusia"}
		+ Variable_Target.HasStructure {Parameter_Type = "Empress_Station"}
		+ Variable_Target.HasStructure {Parameter_Type = "Ground_Ion_Cannon"}
		+ Variable_Target.HasStructure {Parameter_Type = "Ground_Empire_Hypervelocity_Gun"}
		+ Variable_Target.HasStructure {Parameter_Type = "Ground_Pentastar_Hypervelocity_Gun"}
		+ Variable_Target.HasStructure {Parameter_Type = "E_Ground_Base_Shield", Parameter_Count = 1}
		+ Variable_Target.HasStructure {Parameter_Type = "R_Ground_Base_Shield", Parameter_Count = 1}
		+ Variable_Target.HasStructure {Parameter_Type = "E_Galactic_Turbolaser_Tower_Defenses", Parameter_Count = 1}
		+ Variable_Target.HasStructure {Parameter_Type = "R_Galactic_Turbolaser_Tower_Defenses", Parameter_Count = 1}
		+ Variable_Target.HasStructure {Parameter_Type = "U_Galactic_Turbolaser_Tower_Defenses", Parameter_Count = 1}
		+ Variable_Target.HasStructure {Parameter_Type = "Y_Galactic_Turbolaser_Tower_Defenses", Parameter_Count = 1}	
	</Defense_Level>

	<Can_Park_Ground_Unit>
		(Variable_Target.EnemyForce.HasSpaceForce == 0.0) 
		*
		(Variable_Target.OpenGroundCompanySlots > 0)
		*
		Variable_Target.IsSurfaceAccessible
	</Can_Park_Ground_Unit>
	
	<Low_Ground_Defense_Score>
		(1.0 - Variable_Target.FriendlyForce.GroundTotalNBTD)
		*
		Function_Can_Park_Ground_Unit.Evaluate
	</Low_Ground_Defense_Score>

	<Low_Space_Defense_Score>
		1.0 - Variable_Target.FriendlyForce.SpaceTotalNBTD		
	</Low_Space_Defense_Score>

	<Ground_Priority_Defense_Score>
		(Variable_Target.Hints.Chokepoint
		+
		5.0 * Function_Is_Connected_To_Enemy.Evaluate
		+
		5.0 * (Variable_Target.TradeRoutes - Variable_Target.ActiveTradeRoutes)
		+
		Variable_Target.HasStructure {Parameter_Type = "E_Ground_Base_Shield", Parameter_Type = "R_Ground_Base_Shield",
										Parameter_Type = "E_Galactic_Turbolaser_Tower_Defenses", Parameter_Type = "R_Galactic_Turbolaser_Tower_Defenses",
										Parameter_Type = "U_Galactic_Turbolaser_Tower_Defenses", Parameter_Type = "Y_Galactic_Turbolaser_Tower_Defenses"}
		+
		2.0 * Function_Planet_Has_Capital_Building.Evaluate)
		*
		Function_Can_Park_Ground_Unit.Evaluate
	</Ground_Priority_Defense_Score>

	<Space_Priority_Defense_Score>
		Variable_Target.Hints.Chokepoint
		+
		5.0 * Function_Is_Connected_To_Enemy.Evaluate
		+
		5.0 * (Variable_Target.TradeRoutes - Variable_Target.ActiveTradeRoutes)
		+
		Variable_Target.HasStructure {Parameter_Type = "Ground_Ion_Cannon", Parameter_Type = "Ground_Empire_Hypervelocity_Gun", Parameter_Type = "Ground_Pentastar_Hypervelocity_Gun"}
		+
		2.0 * Function_Planet_Has_Capital_Building.Evaluate
	</Space_Priority_Defense_Score>

	<Ground_Staging_Planet>
		Variable_Target.StarbaseLevelUnnormalized
		*
		(1 - Function_Is_Connected_To_Enemy.Evaluate)
		*
		Function_Friendly_Space_Unit_Raw_Total.Evaluate
	</Ground_Staging_Planet>
	
	<Friendly_Space_Unit_Raw_Total>
		Variable_Target.FriendlyForce.SpaceTotalUnnormalized - Variable_Target.FriendlyForce.SpaceTotalUnnormalized {Parameter_Category = GameObjectCategoryType[SpaceHero]}
	</Friendly_Space_Unit_Raw_Total>

	<Friendly_Global_Space_Unit_Raw_Total>
		Variable_Self.SpaceTotalUnnormalized - Variable_Self.SpaceTotalUnnormalized {Parameter_Category = GameObjectCategoryType[SpaceHero]}
	</Friendly_Global_Space_Unit_Raw_Total>

	<Friendly_Land_Unit_Raw_Total>
		Variable_Target.FriendlyForce.GroundTotalUnnormalized - Variable_Target.FriendlyForce.GroundTotalUnnormalized {Parameter_Category = GameObjectCategoryType[LandHero]}
	</Friendly_Land_Unit_Raw_Total>

	<Friendly_Global_Land_Unit_Raw_Total>
		Variable_Self.GroundTotalUnnormalized - Variable_Self.GroundTotalUnnormalized {Parameter_Category = GameObjectCategoryType[LandHero]}
	</Friendly_Global_Land_Unit_Raw_Total>
	
	<Enemy_Global_Space_Unit_Raw_Total>
		Game.EnemyForce.SpaceTotalUnnormalized - Game.EnemyForce.SpaceTotalUnnormalized {Parameter_Category = GameObjectCategoryType[SpaceHero]}
	</Enemy_Global_Space_Unit_Raw_Total>

	<Enemy_Global_Land_Unit_Raw_Total>
		Game.EnemyForce.GroundTotalUnnormalized - Game.EnemyForce.GroundTotalUnnormalized {Parameter_Category = GameObjectCategoryType[LandHero]}
	</Enemy_Global_Land_Unit_Raw_Total>
	
</Equations>
